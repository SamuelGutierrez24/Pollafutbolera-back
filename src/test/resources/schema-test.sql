-- Eliminar y recrear el esquema
DROP SCHEMA public CASCADE;
CREATE SCHEMA public;

-- Tabla de canales de notificación
CREATE TABLE notification_channel (
                                      id SERIAL PRIMARY KEY,
                                      name VARCHAR(50) NOT NULL UNIQUE
);

-- Tabla de roles
CREATE TABLE roles (
                       id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       name VARCHAR(100) NOT NULL,
                       deleted_at TIMESTAMP NULL
);

-- Tabla de empresas
CREATE TABLE companies (
                           id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           name VARCHAR(100) NOT NULL,
                           nit VARCHAR(100) NOT NULL,
                           logo VARCHAR(255) DEFAULT 'https://placehold.co/400',
                           deleted_at TIMESTAMP NULL
);

-- Configuración de plataforma
CREATE TABLE platform_config (
                                 id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                 tournament_champion INT NULL,
                                 team_with_most_goals INT NULL,
                                 exact_score INT NULL,
                                 team_score INT NULL,
                                 match_winner INT NULL,
                                 subchampion INT NULL
);

-- Tabla de permisos
CREATE TABLE permissions (
                             id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             name VARCHAR(100) NOT NULL,
                             deleted_at TIMESTAMP NULL
);

-- Tabla de equipos
CREATE TABLE teams (
                       id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       name VARCHAR(255) NOT NULL,
                       logo_url TEXT,
                       deleted_at TIMESTAMP NULL
);

-- Tabla de torneos
CREATE TABLE tournaments (
                             id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             name VARCHAR(255) NOT NULL,
                             description TEXT,
                             winner_team_id INT NULL,
                             fewest_goals_conceded_team_id INT NULL,
                             top_scoring_team_id INT NULL,
                             deleted_at TIMESTAMP NULL
);

-- Tabla de etapas
CREATE TABLE stages (
                        id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        stage_name VARCHAR(100) NOT NULL,
                        tournament_id INT NOT NULL,
                        deleted_at TIMESTAMP NULL,
                        CONSTRAINT fk_stage_tournament
                        FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE CASCADE
);


-- Tabla de pollas
CREATE TABLE pollas (
                        id SERIAL PRIMARY KEY,
                        start_date TIMESTAMP NOT NULL,
                        end_date TIMESTAMP NOT NULL,
                        private BOOLEAN NOT NULL,
                        image_url VARCHAR(255),
                        platform_config_id INT,
                        tournament_id INT NOT NULL,
                        company_id INT NOT NULL,
                        deleted_at TIMESTAMP,
                        color VARCHAR(50),
                        FOREIGN KEY (platform_config_id) REFERENCES platform_config(id),
                        FOREIGN KEY (tournament_id) REFERENCES tournaments(id),
                        FOREIGN KEY (company_id) REFERENCES companies(id)
);

CREATE TABLE "users" (
                         "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         "cedula" VARCHAR(20) NOT NULL,
                         "company_id" INT NULL,
                         "name" VARCHAR(255) NOT NULL,
                         "last_name" VARCHAR(255),
                         "password" TEXT NOT NULL,
                         "mail" VARCHAR(255) NOT NULL,
                         "nickname" VARCHAR(100) UNIQUE NOT NULL,
                         "phone_number" VARCHAR(20) NULL,
                         "photo" TEXT,
                         "role_id" INT NOT NULL,
                         "extra_info" JSON NULL,
                         "deleted_at" TIMESTAMP NULL
);

CREATE TABLE "permission_role" (
                                   "role_id" INT,
                                   "permission_id" INT,
                                   "deleted_at" TIMESTAMP NULL,
                                   PRIMARY KEY ("role_id", "permission_id")
);

CREATE TABLE "subpollas" (
                             "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             "private" BOOLEAN NOT NULL,
                             "polla_id" INT NOT NULL,
                             "deleted_at" TIMESTAMP NULL
);

CREATE TABLE "user_scores_polla" (
                                     "user_id" INT,
                                     "polla_id" INT,
                                     "scores" INT NOT NULL,
                                     "deleted_at" TIMESTAMP NULL,
                                     PRIMARY KEY ("user_id", "polla_id")
);

CREATE TABLE "rewards" (
                           "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           "name" VARCHAR(255) NOT NULL,
                           "description" TEXT,
                           "image" TEXT,
                           "polla_id" INT NOT NULL,
                           "deleted_at" TIMESTAMP NULL
);

CREATE TABLE "tournament_bets" (
                                   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   "earned_points" INT NOT NULL,
                                   "tournament_id" INT,
                                   "deleted_at" TIMESTAMP NULL
);

CREATE TABLE "matches" (
                         id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         date TIMESTAMP NOT NULL,
                         status VARCHAR(50),
                         home_team_id INT NULL,
                         away_team_id INT NULL,
                         home_score INT NULL,
                         away_score INT NULL,
                         extra_time BOOLEAN DEFAULT FALSE,
                         extra_home_score INT NULL,
                         extra_away_score INT NULL,
                         penalty BOOLEAN DEFAULT FALSE,
                         penalty_home INT NULL,
                         penalty_away INT NULL,
                         winner_team_id INT NULL,
                         tournament_id INT NOT NULL,
                         stage_id INT NOT NULL,
                         deleted_at TIMESTAMP NULL,
                         FOREIGN KEY (home_team_id) REFERENCES teams(id) ON DELETE SET NULL,
                         FOREIGN KEY (away_team_id) REFERENCES teams(id) ON DELETE SET NULL,
                         FOREIGN KEY (winner_team_id) REFERENCES teams(id) ON DELETE SET NULL,
                         FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE CASCADE,
                         FOREIGN KEY (stage_id) REFERENCES stages(id) ON DELETE CASCADE
);


CREATE TABLE "match_bets" (
                              "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              "home_score" INT NOT NULL,
                              "away_score" INT NOT NULL,
                              "earned_points" INT,
                              "user_id" INT,
                              "match_id" INT,
                              "deleted_at" TIMESTAMP NULL
);

-- Foreign Keys
ALTER TABLE "users" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id") ON DELETE CASCADE;
ALTER TABLE "users" ADD FOREIGN KEY ("company_id") REFERENCES "companies" ("id") ON DELETE CASCADE;
ALTER TABLE "permission_role" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id") ON DELETE CASCADE;
ALTER TABLE "permission_role" ADD FOREIGN KEY ("permission_id") REFERENCES "permissions" ("id") ON DELETE CASCADE;
ALTER TABLE "pollas" ADD FOREIGN KEY ("tournament_id") REFERENCES "tournaments" ("id") ON DELETE CASCADE;
ALTER TABLE "subpollas" ADD FOREIGN KEY ("polla_id") REFERENCES "pollas" ("id") ON DELETE CASCADE;
ALTER TABLE "user_scores_polla" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;
ALTER TABLE "user_scores_polla" ADD FOREIGN KEY ("polla_id") REFERENCES "pollas" ("id") ON DELETE CASCADE;
ALTER TABLE "rewards" ADD FOREIGN KEY ("polla_id") REFERENCES "pollas" ("id") ON DELETE CASCADE;
ALTER TABLE "tournaments" ADD FOREIGN KEY ("winner_team_id") REFERENCES "teams" ("id") ON DELETE SET NULL;
ALTER TABLE "tournaments" ADD FOREIGN KEY ("fewest_goals_conceded_team_id") REFERENCES "teams" ("id") ON DELETE SET NULL;
ALTER TABLE "tournaments" ADD FOREIGN KEY ("top_scoring_team_id") REFERENCES "teams" ("id") ON DELETE SET NULL;
ALTER TABLE "tournament_bets" ADD FOREIGN KEY ("tournament_id") REFERENCES "tournaments" ("id") ON DELETE CASCADE;
ALTER TABLE "match_bets" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;
ALTER TABLE "match_bets" ADD FOREIGN KEY ("match_id") REFERENCES "matches" ("id") ON DELETE CASCADE;

-- Tabla de apuestas de partidos
CREATE TABLE match_bets (
                            id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            polla_id INT NOT NULL,
                            home_score INT NOT NULL,
                            away_score INT NOT NULL,
                            earned_points INT,
                            user_id INT,
                            match_id INT,
                            status VARCHAR(50),
                            deleted_at TIMESTAMP NULL,
                            FOREIGN KEY (polla_id) REFERENCES pollas(id) ON DELETE CASCADE,
                            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                            FOREIGN KEY (match_id) REFERENCES matches(id) ON DELETE CASCADE
);

CREATE TABLE "group_stage" (
                               "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               "group_name" VARCHAR(100) NOT NULL,
                               "tournament_id" INT NOT NULL,
                               "first_winner_team_id" INT,
                               "second_winner_team_id" INT,
                               "deleted_at" TIMESTAMP NULL,
                               CONSTRAINT fk_group_tournament FOREIGN KEY ("tournament_id") REFERENCES "tournaments" ("id") ON DELETE CASCADE,
                               CONSTRAINT fk_group_first_winner FOREIGN KEY ("first_winner_team_id") REFERENCES "teams" ("id") ON DELETE SET NULL,
                               CONSTRAINT fk_group_second_winner FOREIGN KEY ("second_winner_team_id") REFERENCES "teams" ("id") ON DELETE SET NULL
);

CREATE TABLE "user_scores_polla" (
                                     "user_id" INT,
                                     "polla_id" INT,
                                     "scores" INT NOT NULL,
                                     "deleted_at" TIMESTAMP NULL,
                                     PRIMARY KEY ("user_id", "polla_id")
);

CREATE TABLE "rewards" (
                           "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           "name" VARCHAR(255) NOT NULL,
                           "description" TEXT,
                           "image" TEXT,
                           "polla_id" INT NOT NULL,
                           "deleted_at" TIMESTAMP NULL
);

CREATE TABLE "tournament_bets" (
                                   "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   "earned_points" INT NOT NULL,
                                   "tournament_id" INT,
                                   "deleted_at" TIMESTAMP NULL
);

CREATE TABLE matches (
                         id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         date TIMESTAMP NOT NULL,
                         status VARCHAR(50),
                         home_team_id INT NULL,
                         away_team_id INT NULL,
                         home_score INT NULL,
                         away_score INT NULL,
                         extra_time BOOLEAN DEFAULT FALSE,
                         extra_home_score INT NULL,
                         extra_away_score INT NULL,
                         penalty BOOLEAN DEFAULT FALSE,
                         penalty_home INT NULL,
                         penalty_away INT NULL,
                         winner_team_id INT NULL,
                         tournament_id INT NOT NULL,
                         stage_id INT NOT NULL,
                         deleted_at TIMESTAMP NULL,
                         FOREIGN KEY (home_team_id) REFERENCES teams(id) ON DELETE SET NULL,
                         FOREIGN KEY (away_team_id) REFERENCES teams(id) ON DELETE SET NULL,
                         FOREIGN KEY (winner_team_id) REFERENCES teams(id) ON DELETE SET NULL,
                         FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE CASCADE,
                         FOREIGN KEY (stage_id) REFERENCES stages(id) ON DELETE CASCADE
);

CREATE TABLE "match_bets" (
                              "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              "home_score" INT NOT NULL,
                              "away_score" INT NOT NULL,
                              "earned_points" INT,
                              "user_id" INT,
                              "match_id" INT,
                              "deleted_at" TIMESTAMP NULL
);
CREATE TABLE tournament_statistics (
                                       tournament_id BIGINT PRIMARY KEY,
                                       winner_team_id BIGINT,
                                       fewest_goals_conceded_team_id BIGINT,
                                       top_scoring_team_id BIGINT,
                                       top_scorer_id BIGINT,
                                       top_scorer_name VARCHAR(255),
                                       top_scorer_team_id BIGINT,
                                       top_scorer_urlimg TEXT,
                                       created_at TIMESTAMP,
                                       updated_at TIMESTAMP
);

-- Foreign Keys
ALTER TABLE "users" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id") ON DELETE CASCADE;
ALTER TABLE "users" ADD FOREIGN KEY ("company_id") REFERENCES "companies" ("id") ON DELETE CASCADE;
ALTER TABLE "permission_role" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id") ON DELETE CASCADE;
ALTER TABLE "permission_role" ADD FOREIGN KEY ("permission_id") REFERENCES "permissions" ("id") ON DELETE CASCADE;
ALTER TABLE "pollas" ADD FOREIGN KEY ("tournament_id") REFERENCES "tournaments" ("id") ON DELETE CASCADE;
ALTER TABLE "subpollas" ADD FOREIGN KEY ("polla_id") REFERENCES "pollas" ("id") ON DELETE CASCADE;
ALTER TABLE "user_scores_polla" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;
ALTER TABLE "user_scores_polla" ADD FOREIGN KEY ("polla_id") REFERENCES "pollas" ("id") ON DELETE CASCADE;
ALTER TABLE "rewards" ADD FOREIGN KEY ("polla_id") REFERENCES "pollas" ("id") ON DELETE CASCADE;
ALTER TABLE "tournaments" ADD FOREIGN KEY ("winner_team_id") REFERENCES "teams" ("id") ON DELETE SET NULL;
ALTER TABLE "tournaments" ADD FOREIGN KEY ("fewest_goals_conceded_team_id") REFERENCES "teams" ("id") ON DELETE SET NULL;
ALTER TABLE "tournaments" ADD FOREIGN KEY ("top_scoring_team_id") REFERENCES "teams" ("id") ON DELETE SET NULL;
ALTER TABLE "tournament_bets" ADD FOREIGN KEY ("tournament_id") REFERENCES "tournaments" ("id") ON DELETE CASCADE;
ALTER TABLE "match_bets" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;
ALTER TABLE "match_bets" ADD FOREIGN KEY ("match_id") REFERENCES "matches" ("id") ON DELETE CASCADE;

-- Índices para optimización
CREATE INDEX idx_users_role_id ON users(role_id);
CREATE INDEX idx_matches_tournament_id ON matches(tournament_id);
CREATE INDEX idx_matches_stage_id ON matches(stage_id);
CREATE INDEX idx_matchbets_match_id ON match_bets(match_id);
CREATE INDEX idx_users_mail ON users(mail);
CREATE INDEX idx_users_cedula ON users(cedula);
CREATE INDEX idx_users_company_id ON users(company_id);
CREATE INDEX idx_users_nickname ON users(nickname);

COMMIT;
